#注意此eureka不能放在application.properties中，否则spring config会找不到服务。
# 原理：因为spring boot 是先加载bootstrap（由父Spring ApplicationContext加载），后加载application（用于应用程序上下文的引导阶段）
eureka.client.serviceUrl.defaultZone=http://localhost:9003/eureka/
#spring admin 配置了eureka,表示从eureka server自动发现所有的注册过的服务
#spring.boot.admin.url=http://localhost:9002

spring.cloud.config.name=front-app
spring.cloud.config.label=master
spring.cloud.config.profile=dev
#客户端以服务的方式进行访问
# 通过注册服务
spring.cloud.config.discovery.enabled=true
spring.cloud.config.discovery.service-id=config-server
#URI方式进行访问
#spring.cloud.config.uri= http://localhost:9004/
spring.cloud.config.username=admin
spring.cloud.config.password=123123

#https://springcloud.cc/spring-cloud-config-zhcn.html#config-client-fail-fast
#new spring-retry,spring-cloud-starter-aop
spring.cloud.config.failFast=true

#spring.rabbitmq.host=localhost
#spring.rabbitmq.port=5672
#spring.rabbitmq.username=guest
#spring.rabbitmq.password=guest

#redis 集群配置 ======start=====
spring.redis.database=0
# 连接超时时长（毫秒）
spring.redis.timeout=6000
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=1000
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=10
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=5
spring.redis.cluster.nodes=10.91.19.101:6621,10.91.19.101:6622,10.91.19.101:6623