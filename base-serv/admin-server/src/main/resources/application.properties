spring.application.name=SpringBootAdminServer
#spring.boot.admin.url=http://localhost:9002
server.port=9002
logging.level.tk.mybatis=TRACE

spring.boot.admin.routes.endpoints=env,metrics,trace,dump,jolokia,info,configprops,trace,logfile,refresh,flyway,liquibase,heapdump,hystrix.stream,turbine.stream,activiti

spring.boot.admin.turbine.clusters=default
#spring.boot.admin.turbine.enabled=true
#设置turbine端点的service-id或者url(不能有后缀/turbine.stream)
spring.boot.admin.turbine.location=http://localhost:9007


#注册到eureka可能会异常，异常原因：eureka server没有注册自身到eureka服务器
# 所以必须在eureka server配置eureka.client.register-with-eureka=true
#采用springboot admin整合eureka的方案自动发现所有的注册过的服务
## 心跳间隔，5秒
eureka.instance.leaseRenewalIntervalInSeconds=5
## 没有心跳的淘汰时间，10秒
eureka.instance.leaseExpirationDurationInSeconds=10

# 定时刷新本地缓存时间
eureka.client.registryFetchIntervalSeconds=5
# ribbon缓存时间
ribbon.ServerListRefreshInterval=2000
eureka.client.serviceUrl.defaultZone=http://localhost:9003/eureka/


spring.jackson.serialization.indent_output=true

spring.mvc.view.prefix=/templates/
spring.mvc.view.suffix=.ftl
spring.freemarker.cache=false
spring.freemarker.request-context-attribute=request

#\u63A7\u5236\u53F0\u5F69\u8272\u8F93\u51FA
spring.output.ansi.enabled=ALWAYS

security.basic.enabled=false
#认证使用的用户名
security.user.name=admin
#认证使用的密码
security.user.password=123123

#actuator暴露接口使用的端口，为了和api接口使用的端口进行分离
management.port=11111
#actuator暴露接口的前缀
#management.context-path=/admin
#actuator是否需要安全保证
management.security.enabled=false

#actuator的metrics接口是否需要安全保证
endpoints.metrics.sensitive=false
endpoints.metrics.enabled=true

#actuator的health接口是否需要安全保证
endpoints.health.sensitive=false
endpoints.health.enabled=true
